{"id":0,"registry":{"0":{"submorphs":[],"scripts":[],"id":"EE3B27B8-84C6-4C19-A73C-534A6C1746E9","shape":{"__isSmartRef__":true,"id":1},"droppingEnabled":true,"halosEnabled":true,"eventHandler":{"__isSmartRef__":true,"id":6},"showsHalos":false,"controlPoints":[{"__isSmartRef__":true,"id":7},{"__isSmartRef__":true,"id":8},{"__isSmartRef__":true,"id":9},{"__isSmartRef__":true,"id":10}],"layout":{"__isSmartRef__":true,"id":11},"name":"Pen","partsBinMetaInfo":{"__isSmartRef__":true,"id":12},"derivationIds":[147,"1C3C008B-8212-44B2-AD73-60A48F06CD6A"],"_ClipMode":"visible","moved":true,"isBeingDragged":false,"endPoints":[],"showingAllMoves":true,"lineInProgress":null,"penWidth":2,"__serializedExpressions__":["_Position","location","startingLocation","penColor","hitPoint"],"worldPts":null,"_Rotation":0,"_Scale":0.9992916708551148,"__serializedLivelyClosures__":{"__isSmartRef__":true,"id":18},"__LivelyClassName__":"lively.morphic.Path","__SourceModuleName__":"Global.lively.morphic.AdditionalMorphs","_Position":"lively.pt(0.0,0.0)","location":"lively.pt(150.0,118.0)","startingLocation":"lively.pt(117.0,80.0)","penColor":"Color.rgb(0,204,0)","hitPoint":"lively.pt(250.0,362.0)"},"1":{"dontChangeShape":false,"cachedVertices":null,"_PathElements":[{"__isSmartRef__":true,"id":2},{"__isSmartRef__":true,"id":3},{"__isSmartRef__":true,"id":4},{"__isSmartRef__":true,"id":5}],"_BorderWidth":1,"_BorderRadius":0,"_Opacity":1,"_BorderStyle":"solid","_AppearanceStylingMode":false,"_BorderStylingMode":false,"__serializedExpressions__":["_Position","_Extent","_BorderColor","_Padding","_Fill"],"__LivelyClassName__":"lively.morphic.Shapes.Path","__SourceModuleName__":"Global.lively.morphic.PathShapes","_Position":"lively.pt(-21.0,-6.0)","_Extent":"lively.pt(21.0,11.0)","_BorderColor":"Color.rgb(66,66,66)","_Padding":"lively.rect(0,0,0,0)","_Fill":"Color.rgb(0,204,0)"},"2":{"isAbsolute":true,"x":0,"y":0,"__LivelyClassName__":"lively.morphic.Shapes.MoveTo","__SourceModuleName__":"Global.lively.morphic.PathShapes"},"3":{"isAbsolute":true,"x":-20,"y":5,"__LivelyClassName__":"lively.morphic.Shapes.LineTo","__SourceModuleName__":"Global.lively.morphic.PathShapes"},"4":{"isAbsolute":true,"x":-20,"y":-5,"__LivelyClassName__":"lively.morphic.Shapes.LineTo","__SourceModuleName__":"Global.lively.morphic.PathShapes"},"5":{"isAbsolute":true,"x":0,"y":0,"__LivelyClassName__":"lively.morphic.Shapes.LineTo","__SourceModuleName__":"Global.lively.morphic.PathShapes"},"6":{"morph":{"__isSmartRef__":true,"id":0},"__LivelyClassName__":"lively.morphic.EventHandler","__SourceModuleName__":"Global.lively.morphic.Events"},"7":{"morph":{"__isSmartRef__":true,"id":0},"index":0,"__LivelyClassName__":"lively.morphic.ControlPoint","__SourceModuleName__":"Global.lively.morphic.AdditionalMorphs"},"8":{"morph":{"__isSmartRef__":true,"id":0},"index":1,"__LivelyClassName__":"lively.morphic.ControlPoint","__SourceModuleName__":"Global.lively.morphic.AdditionalMorphs"},"9":{"morph":{"__isSmartRef__":true,"id":0},"index":2,"__LivelyClassName__":"lively.morphic.ControlPoint","__SourceModuleName__":"Global.lively.morphic.AdditionalMorphs"},"10":{"morph":{"__isSmartRef__":true,"id":0},"index":3,"__LivelyClassName__":"lively.morphic.ControlPoint","__SourceModuleName__":"Global.lively.morphic.AdditionalMorphs"},"11":{},"12":{"partName":"Pen","requiredModules":[],"migrationLevel":4,"partsSpaceName":"PartsBin/Basic/","comment":"This is a classic implementation of turtle graphics in HTML.  As it draws lines using go() and turn() it makes a list of lines,  drawLines() will them make the drawing visible.  I haven't implemented penuUp/penDown.\n\nA number of examples are in /testing/\nNote you can drag a pen to make a squiggle drawing","lastModifiedDate":{"__isSmartRef__":true,"id":13},"changes":[{"__isSmartRef__":true,"id":14},{"__isSmartRef__":true,"id":16}],"__LivelyClassName__":"lively.PartsBin.PartsBinMetaInfo","__SourceModuleName__":"Global.lively.PartsBin"},"13":{"isSerializedDate":true,"string":"Tue Apr 16 2013 14:31:20 GMT-0700 (PDT)"},"14":{"date":{"__isSmartRef__":true,"id":15},"author":"Dan","message":"no comment","id":"A507117B-A57C-4CE1-966A-403BE34D176A"},"15":{"isSerializedDate":true,"string":"Tue Apr 16 2013 14:34:31 GMT-0700 (PDT)"},"16":{"date":{"__isSmartRef__":true,"id":17},"author":"Dan","message":"added makeWorldTracks for embedding on windmills ;-)","id":"03D53DD9-5719-4205-94B6-856ABF4F4626"},"17":{"isSerializedDate":true,"string":"Tue Apr 16 2013 16:02:49 GMT-0700 (PDT)"},"18":{"aboutMe":{"__isSmartRef__":true,"id":19},"drawLines":{"__isSmartRef__":true,"id":23},"filbert":{"__isSmartRef__":true,"id":27},"filberts":{"__isSmartRef__":true,"id":31},"fillLines":{"__isSmartRef__":true,"id":35},"go":{"__isSmartRef__":true,"id":39},"hilbert":{"__isSmartRef__":true,"id":43},"newLine":{"__isSmartRef__":true,"id":47},"reset":{"__isSmartRef__":true,"id":51},"setPenColor":{"__isSmartRef__":true,"id":55},"setPenWidth":{"__isSmartRef__":true,"id":59},"spiral":{"__isSmartRef__":true,"id":63},"testing":{"__isSmartRef__":true,"id":67},"turn":{"__isSmartRef__":true,"id":71},"yetToDo":{"__isSmartRef__":true,"id":75},"showAllMoves":{"__isSmartRef__":true,"id":79},"showState":{"__isSmartRef__":true,"id":83},"drawLineSoFar":{"__isSmartRef__":true,"id":87},"dragon":{"__isSmartRef__":true,"id":91},"goto":{"__isSmartRef__":true,"id":95},"onDrag":{"__isSmartRef__":true,"id":99},"onDragStart":{"__isSmartRef__":true,"id":107},"onDragEnd":{"__isSmartRef__":true,"id":115},"makeTracks":{"__isSmartRef__":true,"id":123},"makeWorldTracks":{"__isSmartRef__":true,"id":127}},"19":{"varMapping":{"__isSmartRef__":true,"id":20},"source":"function aboutMe() {\n    // This is a classic implementation of turtle graphics in HTML\n    // As it draws lines using go() and turn() it makes a list of lines\n    // drawLines() will them make the drawing visible\n    // I haven't implemented penuUp/penDown\n    // A number of examples are in /testing/\n    // Note you can drag a pen to make a squiggle drawing\n}","funcProperties":{"__isSmartRef__":true,"id":21},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"20":{"this":{"__isSmartRef__":true,"id":0}},"21":{"timestamp":{"__isSmartRef__":true,"id":22},"user":"Dan","tags":[]},"22":{"isSerializedDate":true,"string":"Tue Apr 16 2013 14:31:01 GMT-0700 (PDT)"},"23":{"varMapping":{"__isSmartRef__":true,"id":24},"source":"function drawLines() {\n    if (this.lineInProgress) this.lineInProgress.remove();\n    this.lineInProgress = null;\n    if (this.fillColor) \n        var morph = lively.morphic.Morph.makePolygon(this.endPoints, this.penWidth, this.penColor, this.fillColor);\n    else \n        var morph = lively.morphic.Morph.makeLine(this.endPoints, this.penWidth, this.penColor);\n\n    if (this.owner) this.owner.addMorph(morph);\n    else $world.addMorph(morph);\n    this.showState();\n    return morph;\n}","funcProperties":{"__isSmartRef__":true,"id":25},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"24":{"this":{"__isSmartRef__":true,"id":0}},"25":{"timestamp":{"__isSmartRef__":true,"id":26},"user":"Dan","tags":[]},"26":{"isSerializedDate":true,"string":"Thu Mar 21 2013 12:00:57 GMT-0700 (PDT)"},"27":{"varMapping":{"__isSmartRef__":true,"id":28},"source":"function filbert(n, s, color) {\n    // Two Hilbert curves form a Hilbert tile\n    this.newLine();  \n    this.setPenColor(Color.black); \n    this.setPenWidth(1);\n    this.hilbert(n, s); \n    this.go(s);\n    this.hilbert(n, s); \n    this.go(s);\n    return this.fillLines(color); \n}","funcProperties":{"__isSmartRef__":true,"id":29},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"28":{"this":{"__isSmartRef__":true,"id":0}},"29":{"timestamp":{"__isSmartRef__":true,"id":30},"user":"Dan","tags":[]},"30":{"isSerializedDate":true,"string":"Wed Mar 13 2013 15:07:43 GMT-0700 (PDT)"},"31":{"varMapping":{"__isSmartRef__":true,"id":32},"source":"function filberts(n, s) {\n    // Four interlocking filberts\n    var n2 = Math.pow(2,n-1);\n    var morphs = [ ];\n\n    for (var i = 0; i < 4; i++) {\n        morphs.push(this.filbert(n, s, Color.wheel(4)[i]));\n        this.go((n2 - 1)*s); \n        this.turn(-90); \n        this.go(n2 * s); \n        this.turn(180);\n    }\n    return morphs; \n}","funcProperties":{"__isSmartRef__":true,"id":33},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"32":{"this":{"__isSmartRef__":true,"id":0}},"33":{"timestamp":{"__isSmartRef__":true,"id":34},"user":"Dan","tags":[]},"34":{"isSerializedDate":true,"string":"Wed Mar 13 2013 15:07:43 GMT-0700 (PDT)"},"35":{"varMapping":{"__isSmartRef__":true,"id":36},"source":"function fillLines(color) {\n    this.fillColor = color; \n    return this.drawLines();\n}","funcProperties":{"__isSmartRef__":true,"id":37},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"36":{"this":{"__isSmartRef__":true,"id":0}},"37":{"timestamp":{"__isSmartRef__":true,"id":38},"user":"Dan","tags":[]},"38":{"isSerializedDate":true,"string":"Wed Mar 13 2013 15:07:43 GMT-0700 (PDT)"},"39":{"varMapping":{"__isSmartRef__":true,"id":40},"source":"function go(dist) {\n    var newPoint = this.location.addPt(Point.polar(dist, this.heading.toRadians()));\n    return this.goto(newPoint)\n}","funcProperties":{"__isSmartRef__":true,"id":41},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"40":{"this":{"__isSmartRef__":true,"id":0}},"41":{"timestamp":{"__isSmartRef__":true,"id":42},"user":"Dan","tags":[]},"42":{"isSerializedDate":true,"string":"Thu Mar 21 2013 11:17:43 GMT-0700 (PDT)"},"43":{"varMapping":{"__isSmartRef__":true,"id":44},"source":"function hilbert(n, s) {\n      // Draw an nth level Hilbert curve with side length s.\n    if (n == 0) \n        return this.turn(180);\n\n    if (n > 0) { \n        var a = 90;  \n        var m = n - 1; \n    } else { \n        var a = -90;  \n        var m = n + 1; \n    }\n    \n    this.turn(a); \n    this.hilbert(0 - m, s);\n    this.turn(a); \n    this.go(s); \n    this.hilbert(m, s);\n    this.turn(0 - a); \n    this.go(s); \n    this.turn(0 - a); \n    this.hilbert(m, s);\n    this.go(s); \n    this.turn(a); \n    this.hilbert(0 - m, s);\n    this.turn(a); \n}","funcProperties":{"__isSmartRef__":true,"id":45},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"44":{"this":{"__isSmartRef__":true,"id":0}},"45":{"timestamp":{"__isSmartRef__":true,"id":46},"user":"Dan","tags":[]},"46":{"isSerializedDate":true,"string":"Wed Mar 13 2013 15:07:43 GMT-0700 (PDT)"},"47":{"varMapping":{"__isSmartRef__":true,"id":48},"source":"function newLine(loc) {\n    this.startingLocation = loc ? loc : this.location;\n    this.endPoints = [ this.startingLocation ];\n}","funcProperties":{"__isSmartRef__":true,"id":49},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"48":{"this":{"__isSmartRef__":true,"id":0}},"49":{"timestamp":{"__isSmartRef__":true,"id":50},"user":"Dan","tags":[]},"50":{"isSerializedDate":true,"string":"Wed Mar 13 2013 22:16:29 GMT-0700 (PDT)"},"51":{"varMapping":{"__isSmartRef__":true,"id":52},"source":"function reset(loc) {  // this.reset()\n    this.location = (loc !== undefined) ? loc\n            : pt(500, 400);\n    this.penWidth = 2;\n    this.penColor = Color.red;\n    this.fillColor = null;\n    this.heading = 0;\n    this.showingAllMoves = false;\n    this.newLine(this.location);\n    this.showState();\n    return this \n }","funcProperties":{"__isSmartRef__":true,"id":53},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"52":{"this":{"__isSmartRef__":true,"id":0}},"53":{"timestamp":{"__isSmartRef__":true,"id":54},"user":"Dan","tags":[]},"54":{"isSerializedDate":true,"string":"Thu Mar 21 2013 11:19:20 GMT-0700 (PDT)"},"55":{"varMapping":{"__isSmartRef__":true,"id":56},"source":"function setPenColor(color) {\n    this.penColor = color;\n    if (this.showingAllMoves) this.setFill(color);\n}","funcProperties":{"__isSmartRef__":true,"id":57},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"56":{"this":{"__isSmartRef__":true,"id":0}},"57":{"timestamp":{"__isSmartRef__":true,"id":58},"user":"Dan","tags":[]},"58":{"isSerializedDate":true,"string":"Wed Mar 13 2013 21:21:31 GMT-0700 (PDT)"},"59":{"varMapping":{"__isSmartRef__":true,"id":60},"source":"function setPenWidth(size) {\n    this.penWidth = size;\n}","funcProperties":{"__isSmartRef__":true,"id":61},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"60":{"this":{"__isSmartRef__":true,"id":0}},"61":{"timestamp":{"__isSmartRef__":true,"id":62},"user":"Dan","tags":[]},"62":{"isSerializedDate":true,"string":"Wed Mar 13 2013 15:07:43 GMT-0700 (PDT)"},"63":{"varMapping":{"__isSmartRef__":true,"id":64},"source":"function spiral(n, angle, color, d) { // this.copy().reset().spiral(50, 91)\n    if (!n) n = 100;\n    if (!angle) angle = 89;\n    if (!color) color = Color.red;\n    if (!d) d = 2;\n    this.reset();\n    this.setPenColor(color);\n    for (var i=1; i<=n; i++) {\n        this.go(d*i); this.turn(angle); };\n    return this.drawLines();\n}","funcProperties":{"__isSmartRef__":true,"id":65},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"64":{"this":{"__isSmartRef__":true,"id":0}},"65":{"timestamp":{"__isSmartRef__":true,"id":66},"user":"Dan","tags":[]},"66":{"isSerializedDate":true,"string":"Wed Mar 13 2013 15:07:43 GMT-0700 (PDT)"},"67":{"varMapping":{"__isSmartRef__":true,"id":68},"source":"function testing() {\n    // this.show();\n    // this.copy().reset().spiral(50, 91)\n    // this.copy().reset().openInWorld().showAllMoves(true).go(50).turn(45).go(50)\n    // this.copy().reset().filbert(4,10, Color.yellow);\n    // this.copy().reset().filberts(4,10);\n    // this.copy().reset().dragon(8,10).drawLines()\n}","funcProperties":{"__isSmartRef__":true,"id":69},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"68":{"this":{"__isSmartRef__":true,"id":0}},"69":{"timestamp":{"__isSmartRef__":true,"id":70},"user":"Dan","tags":[]},"70":{"isSerializedDate":true,"string":"Tue Apr 16 2013 15:37:54 GMT-0700 (PDT)"},"71":{"varMapping":{"__isSmartRef__":true,"id":72},"source":"function turn(degrees) {\n    this.heading += degrees; \n    if (this.showingAllMoves) this.setRotation(this.heading.toRadians());\n    return this;\n}","funcProperties":{"__isSmartRef__":true,"id":73},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"72":{"this":{"__isSmartRef__":true,"id":0}},"73":{"timestamp":{"__isSmartRef__":true,"id":74},"user":"Dan","tags":[]},"74":{"isSerializedDate":true,"string":"Wed Mar 13 2013 21:54:19 GMT-0700 (PDT)"},"75":{"varMapping":{"__isSmartRef__":true,"id":76},"source":"function yetToDo() {\n    // [X] Make a triangle morph shape showing heading\n    // [X] Add .showAllMoves for visible actions\n    // [X] Cause the morph to show itself after every drawLines or reset\n    // [X] Make setLocation, heading and fillColor into methods that\n    //        update the morph - show morph color as border or fill\n    // [ ] Implement penUp, penDown by use of drawLines, setPosition\n    // [ ] Write a squiggle program\n    // [ ] Make a kaleidoscopic squiggle using makeCommander\n}","funcProperties":{"__isSmartRef__":true,"id":77},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"76":{"this":{"__isSmartRef__":true,"id":0}},"77":{"timestamp":{"__isSmartRef__":true,"id":78},"user":"Dan","tags":[]},"78":{"isSerializedDate":true,"string":"Thu Mar 21 2013 11:10:19 GMT-0700 (PDT)"},"79":{"varMapping":{"__isSmartRef__":true,"id":80},"source":"function showAllMoves(whetherOrNot) {\n    // Cause the Pen to be shown during line drawing.\n    // Sadly this doesn't work well for, eg, designs, \n    // but you can do things like\n    // this.copy().reset().openInWorld().showAllMoves(true).go(50).turn(45).go(50)\n    // and if you do, eg, go(120) in an inspector of that pen, \n    // you will see the line drawn and the pen move\n    this.showingAllMoves = whetherOrNot;\n    if(whetherOrNot) this.showState();\n    return this;\n}","funcProperties":{"__isSmartRef__":true,"id":81},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"80":{"this":{"__isSmartRef__":true,"id":0}},"81":{"timestamp":{"__isSmartRef__":true,"id":82},"user":"Dan","tags":[]},"82":{"isSerializedDate":true,"string":"Thu Mar 21 2013 10:54:43 GMT-0700 (PDT)"},"83":{"varMapping":{"__isSmartRef__":true,"id":84},"source":"function showState() {\n    this.setRotation((this.heading || 0).toRadians());\n    this.setFill(this.penColor);\n    this.setPosition(this.location)\n}","funcProperties":{"__isSmartRef__":true,"id":85},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"84":{"this":{"__isSmartRef__":true,"id":0}},"85":{"timestamp":{"__isSmartRef__":true,"id":86},"user":"Dan","tags":[]},"86":{"isSerializedDate":true,"string":"Thu Mar 21 2013 11:42:28 GMT-0700 (PDT)"},"87":{"varMapping":{"__isSmartRef__":true,"id":88},"source":"function drawLineSoFar() {\n    if (this.lineInProgress) this.lineInProgress.remove();\n    this.lineInProgress = lively.morphic.Morph.makeLine(this.endPoints, this.penWidth, this.penColor);\ndebugger;\n    if (this.owner) this.owner.addMorph(this.lineInProgress);\n    else $world.addMorph(this.lineInProgress);\n    this.setPosition(this.location)\n}","funcProperties":{"__isSmartRef__":true,"id":89},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"88":{"this":{"__isSmartRef__":true,"id":0}},"89":{"timestamp":{"__isSmartRef__":true,"id":90},"user":"Dan","tags":[]},"90":{"isSerializedDate":true,"string":"Thu Mar 21 2013 11:58:45 GMT-0700 (PDT)"},"91":{"varMapping":{"__isSmartRef__":true,"id":92},"source":"function dragon(n, d) { // this.copy().reset().dragon(8,10).drawLines()\n    if (n==0) {return this.go(d); return this}\n    if (n>0) return this.dragon(n-1, d).turn(90).dragon(-(n-1), d);\n        else return this.dragon(-(n+1), d).turn(-90).dragon(n+1, d);\n}","funcProperties":{"__isSmartRef__":true,"id":93},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"92":{"this":{"__isSmartRef__":true,"id":0}},"93":{"timestamp":{"__isSmartRef__":true,"id":94},"user":"Dan","tags":[]},"94":{"isSerializedDate":true,"string":"Wed Mar 20 2013 15:30:20 GMT-0700 (PDT)"},"95":{"varMapping":{"__isSmartRef__":true,"id":96},"source":"function goto(newPoint) {\n    this.location = newPoint;\n    this.endPoints.push(this.location);\n    if (this.showingAllMoves) this.drawLineSoFar();\n    return this;\n}","funcProperties":{"__isSmartRef__":true,"id":97},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"96":{"this":{"__isSmartRef__":true,"id":0}},"97":{"timestamp":{"__isSmartRef__":true,"id":98},"user":"Dan","tags":[]},"98":{"isSerializedDate":true,"string":"Thu Mar 21 2013 11:15:33 GMT-0700 (PDT)"},"99":{"varMapping":{"__isSmartRef__":true,"id":100},"source":"function onDrag(evt) {\n    this.goto(evt.getPosition());\n}","funcProperties":{"__isSmartRef__":true,"id":105},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"100":{"this":{"__isSmartRef__":true,"id":0},"__serializedLivelyClosures__":{"__isSmartRef__":true,"id":101}},"101":{"$super":{"__isSmartRef__":true,"id":102}},"102":{"varMapping":{"__isSmartRef__":true,"id":103},"source":"function () {\n                    try {\n                        return obj.constructor.prototype[name].apply(obj, arguments)\n                    } catch (e) {\n                        if ($world)\n                            $world.logError(e, 'Error in $super call')\n                        else\n                            alert('Error in $super call: ' + e + '\\n' + e.stack);\n                        return null;\n                    }\n                }","funcProperties":{"__isSmartRef__":true,"id":104},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"103":{"obj":{"__isSmartRef__":true,"id":0},"name":"onDrag"},"104":{},"105":{"timestamp":{"__isSmartRef__":true,"id":106},"user":"Dan","tags":[]},"106":{"isSerializedDate":true,"string":"Thu Mar 21 2013 12:33:03 GMT-0700 (PDT)"},"107":{"varMapping":{"__isSmartRef__":true,"id":108},"source":"function onDragStart(evt) {\n    this.location = evt.getPosition();\n    this.newLine();\n    this.showAllMoves(true);\n}","funcProperties":{"__isSmartRef__":true,"id":113},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"108":{"this":{"__isSmartRef__":true,"id":0},"__serializedLivelyClosures__":{"__isSmartRef__":true,"id":109}},"109":{"$super":{"__isSmartRef__":true,"id":110}},"110":{"varMapping":{"__isSmartRef__":true,"id":111},"source":"function () {\n                    try {\n                        return obj.constructor.prototype[name].apply(obj, arguments)\n                    } catch (e) {\n                        if ($world)\n                            $world.logError(e, 'Error in $super call')\n                        else\n                            alert('Error in $super call: ' + e + '\\n' + e.stack);\n                        return null;\n                    }\n                }","funcProperties":{"__isSmartRef__":true,"id":112},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"111":{"obj":{"__isSmartRef__":true,"id":0},"name":"onDragStart"},"112":{},"113":{"timestamp":{"__isSmartRef__":true,"id":114},"user":"Dan","tags":[]},"114":{"isSerializedDate":true,"string":"Thu Mar 21 2013 12:52:35 GMT-0700 (PDT)"},"115":{"varMapping":{"__isSmartRef__":true,"id":116},"source":"function onDragEnd(evt) {\n    this.drawLines();\n    this.owner.addMorph(this); // put me on top for grabbing again\n}","funcProperties":{"__isSmartRef__":true,"id":121},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"116":{"this":{"__isSmartRef__":true,"id":0},"__serializedLivelyClosures__":{"__isSmartRef__":true,"id":117}},"117":{"$super":{"__isSmartRef__":true,"id":118}},"118":{"varMapping":{"__isSmartRef__":true,"id":119},"source":"function () {\n                    try {\n                        return obj.constructor.prototype[name].apply(obj, arguments)\n                    } catch (e) {\n                        if ($world)\n                            $world.logError(e, 'Error in $super call')\n                        else\n                            alert('Error in $super call: ' + e + '\\n' + e.stack);\n                        return null;\n                    }\n                }","funcProperties":{"__isSmartRef__":true,"id":120},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"119":{"obj":{"__isSmartRef__":true,"id":0},"name":"onDragEnd"},"120":{},"121":{"timestamp":{"__isSmartRef__":true,"id":122},"user":"Dan","tags":[]},"122":{"isSerializedDate":true,"string":"Thu Mar 21 2013 12:59:07 GMT-0700 (PDT)"},"123":{"varMapping":{"__isSmartRef__":true,"id":124},"source":"function makeTracks() {\n    // this.showAllMoves()\n    // This method allows drawing tracks in the world\n    // It resets the polyline at the end of every 100 segments\n}","funcProperties":{"__isSmartRef__":true,"id":125},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"124":{"this":{"__isSmartRef__":true,"id":0}},"125":{"timestamp":{"__isSmartRef__":true,"id":126},"user":"Dan","tags":[]},"126":{"isSerializedDate":true,"string":"Tue Apr 16 2013 14:54:07 GMT-0700 (PDT)"},"127":{"varMapping":{"__isSmartRef__":true,"id":128},"source":"function makeWorldTracks() {\n    // this.startStepping(300, \"makeWorldTracks\")\n    // this.stopStepping()\n    // this.worldPts = [this.worldPoint(pt(0, 0))];  // trim line\n\n    // This method allows drawing tracks in the world\n    // It trims the polyline at the end to 200 segments\n    if (!this.worldPts || this.worldPts.length > 200) this.worldPts.shift();\n    if (this.lineInProgress) this.lineInProgress.remove();\n    this.worldPts.push(this.worldPoint(pt(0, 0)));\n    this.lineInProgress = lively.morphic.Morph.makeLine(this.worldPts, this.penWidth, this.penColor);\n    if (this.world()) this.world().addMorph(this.lineInProgress);\n    else $world.addMorph(this.lineInProgress);\n}","funcProperties":{"__isSmartRef__":true,"id":129},"__LivelyClassName__":"lively.Closure","__SourceModuleName__":"Global.lively.lang.Closure"},"128":{"this":{"__isSmartRef__":true,"id":0}},"129":{"timestamp":{"__isSmartRef__":true,"id":130},"user":"Dan","tags":[]},"130":{"isSerializedDate":true,"string":"Tue Apr 16 2013 15:54:21 GMT-0700 (PDT)"},"isSimplifiedRegistry":true}}